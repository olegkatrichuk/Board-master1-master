@using Microsoft.AspNetCore.Http.Extensions
@model MyBoard.Models.Advert

@{
    ViewData["Title"] = "Details";
    var photoPath = "~/images/" + (Model.AdvertPhotos[0].PhotoPath ?? "noimage.jpg");
}

<h1>Детали вашего обьявления</h1>

<div class="container">

    <hr />
    <dl class="row">

        <dt class="col-sm-2">
            <label asp-for="Title" class="col-sm-2 control-label text-left">Заголовок</label>
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class="col-sm-2">
            <label asp-for="Category" class="col-sm-4 control-label text-left">Категория</label>
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Category)
        </dd>
        <dt class="col-sm-2">
            <label asp-for="ProductIsNew" class="control-label col-sm-4 text-left">Товар</label>
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ProductIsNew)
        </dd>
        <dt class="col-sm-2">
            <label asp-for="Price" class="control-label col-sm-2 text-left">Цена</label>
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Price)
        </dd>
        <dt class="col-sm-2">
            <label asp-for="IsNegotiatedPrice" class="control-label text-left">Договорная цена</label>
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.IsNegotiatedPrice)
        </dd>
        <dt class="col-sm-2">
            <label asp-for="Description" class="control-label text-left">Описание</label>
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class="col-sm-2">
            <label asp-for="Cities" class="control-label text-left ">Город</label>
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Cities)
        </dd>
        <dt class="col-sm-2">
            <label asp-for="Phones" class="control-label text-left">Телефон</label>
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Phones)
        </dd>
        <dd>
            <img class="rounded" src="@photoPath" asp-append-version="true" title="НЕТ КАРТИНКИ" style="width: 200px; height: 200px" />
        </dd>
    </dl>
</div>

<div>
   @* @Html.ActionLink("PDF", "ConvertToPdf", new { id = Model.Id, sourceUrl = Context.Request.GetEncodedUrl() })|*@
    @Html.ActionLink("Редактировать", "Edit", new { id = Model.Id }) |
    <a asp-action="Index">На главную страницу</a>
</div>

    <div id="js-result"></div>
    <button type="button" class="btn btn-info" id="js-load">
        <span class="spinner-grow spinner-grow-sm d-none" role="status" aria-hidden="true"></span>
        Экспортировать в PDF
    </button>


@section scripts
{
    @*createPDF*@
    <script language="javascript">

        $('#js-load').click(function () {
            var _this = $(this);
            $.ajax({
                    type: 'GET',
                    url: "https://localhost:44321/home/converttopdfAjax",
                    xhrFields: {
                        responseType: 'blob'
                    },
                    beforeSend: function() {
                        _this
                            .prop('disabled', true)
                            .find('.spinner-grow').removeClass('d-none');
                    },
                    data: {
                        sourceUrl: window.location.href
                    }
                })
                .done(function(data) {
                    var a = document.createElement('a');
                    var url = window.URL.createObjectURL(data);
                    a.href = url;
                    a.download = 'Advert.pdf';
                    document.body.append(a);
                    a.click();
                    a.remove();
                    window.URL.revokeObjectURL(url);


                    var output = "";
                    for (var i in data) {
                        if (data.hasOwnProperty(i)) {
                            output += ($('<span>').text(data[i]))[0].outerHTML;
                        }
                    }
                    output = ($('<span>').html(output))[0].outerHTML;
                    $('#js-result').html(output);
                    _this.find('.spinner-grow').addClass('d-none');
                });
        });

        $(document).ajaxComplete(function () {
            $("#js-load").attr('disabled', false);
        });

    </script>




    @*$(document).ready(function() {
            $('#btn-download').bind("click",
                function() {
                    $(this).attr('disabled', true);
                    $.ajax({
                        method: "GET",
                        url: "https://localhost:44321/home/converttopdfAjax",
                        xhrFields: {
                            responseType: 'blob'
                        },
                        data: {
                            sourceUrl: window.location.href
                        },
                        success: function (data) {
                            var a = document.createElement('a');
                            var url = window.URL.createObjectURL(data);
                            a.href = url;
                            a.download = 'Advert.pdf';
                            document.body.append(a);
                            a.click();
                            a.remove();
                            window.URL.revokeObjectURL(url);
                        },
                        error: function(er) {
                            console.log(er);
                        }

                    });
                });
        });*@
}
