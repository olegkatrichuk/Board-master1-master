<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Header" xml:space="preserve">
    <value>Доска обьявлений</value>
    <comment>Заголовок на главной странице</comment>
  </data>
  <data name="String1" xml:space="preserve">
    <value>Поиск</value>
    <comment>Поиск</comment>
  </data>
  <data name="String10" xml:space="preserve">
    <value>Услуги</value>
    <comment>Услуги</comment>
  </data>
  <data name="String11" xml:space="preserve">
    <value>Одежда</value>
    <comment>Одежда</comment>
  </data>
  <data name="String12" xml:space="preserve">
    <value>Дети</value>
    <comment>Дети</comment>
  </data>
  <data name="String13" xml:space="preserve">
    <value>Запчасти</value>
    <comment>Запчасти</comment>
  </data>
  <data name="String14" xml:space="preserve">
    <value>Обмен</value>
    <comment>Обмен</comment>
  </data>
  <data name="String15" xml:space="preserve">
    <value>Подарю</value>
    <comment>Подарю</comment>
  </data>
  <data name="String16" xml:space="preserve">
    <value>Отдых</value>
    <comment>Отдых</comment>
  </data>
  <data name="String17" xml:space="preserve">
    <value>Бизнес</value>
    <comment>Бизнес</comment>
  </data>
  <data name="String18" xml:space="preserve">
    <value>подробнее</value>
    <comment>подробнее</comment>
  </data>
  <data name="String19" xml:space="preserve">
    <value>Винница</value>
    <comment>Винница</comment>
  </data>
  <data name="String2" xml:space="preserve">
    <value>Город</value>
    <comment>Город</comment>
  </data>
  <data name="String20" xml:space="preserve">
    <value>Днепр</value>
    <comment>Днепр</comment>
  </data>
  <data name="String21" xml:space="preserve">
    <value>Донецк</value>
    <comment>Донецк</comment>
  </data>
  <data name="String22" xml:space="preserve">
    <value>Житомир</value>
    <comment>Житомир</comment>
  </data>
  <data name="String23" xml:space="preserve">
    <value>Запорожье</value>
    <comment>Запорожье</comment>
  </data>
  <data name="String24" xml:space="preserve">
    <value>Ивано-Франковск</value>
    <comment>Ивано-Франковск</comment>
  </data>
  <data name="String25" xml:space="preserve">
    <value>Киев</value>
    <comment>Киев</comment>
  </data>
  <data name="String26" xml:space="preserve">
    <value>Кропивницкий</value>
    <comment>Кропивницкий</comment>
  </data>
  <data name="String27" xml:space="preserve">
    <value>Луганск</value>
    <comment>Луганск</comment>
  </data>
  <data name="String28" xml:space="preserve">
    <value>Луцк</value>
    <comment>Луцк</comment>
  </data>
  <data name="String29" xml:space="preserve">
    <value>Львов</value>
    <comment>Львов</comment>
  </data>
  <data name="String3" xml:space="preserve">
    <value>Найти</value>
    <comment>Поиск</comment>
  </data>
  <data name="String30" xml:space="preserve">
    <value>Николаев</value>
    <comment>Николаев</comment>
  </data>
  <data name="String31" xml:space="preserve">
    <value>Одесса</value>
    <comment>Одесса</comment>
  </data>
  <data name="String32" xml:space="preserve">
    <value>Полтава</value>
    <comment>Полтава</comment>
  </data>
  <data name="String33" xml:space="preserve">
    <value>Ровно</value>
    <comment>Ровно</comment>
  </data>
  <data name="String34" xml:space="preserve">
    <value>Сумы</value>
    <comment>Сумы</comment>
  </data>
  <data name="String35" xml:space="preserve">
    <value>Тернополь</value>
    <comment>Тернополь</comment>
  </data>
  <data name="String36" xml:space="preserve">
    <value>Ужгород</value>
    <comment>Ужгород</comment>
  </data>
  <data name="String37" xml:space="preserve">
    <value>Харьков</value>
    <comment>Харьков</comment>
  </data>
  <data name="String38" xml:space="preserve">
    <value>Херсон</value>
    <comment>Херсон</comment>
  </data>
  <data name="String39" xml:space="preserve">
    <value>Хмельницкий</value>
    <comment>Хмельницкий</comment>
  </data>
  <data name="String4" xml:space="preserve">
    <value>Недвижимость</value>
    <comment>Недвижимость</comment>
  </data>
  <data name="String40" xml:space="preserve">
    <value>Черкассы</value>
    <comment>Черкассы</comment>
  </data>
  <data name="String41" xml:space="preserve">
    <value>Чернигов</value>
    <comment>Чернигов</comment>
  </data>
  <data name="String42" xml:space="preserve">
    <value>Черновцы</value>
    <comment>Черновцы</comment>
  </data>
  <data name="String5" xml:space="preserve">
    <value>Транспорт</value>
    <comment>Транспорт</comment>
  </data>
  <data name="String6" xml:space="preserve">
    <value>Работа</value>
    <comment>Работа</comment>
  </data>
  <data name="String7" xml:space="preserve">
    <value>Животные</value>
    <comment>Животные</comment>
  </data>
  <data name="String8" xml:space="preserve">
    <value>Электроника</value>
    <comment>Электроника</comment>
  </data>
  <data name="String9" xml:space="preserve">
    <value>Спорт</value>
    <comment>Спорт</comment>
  </data>
</root>